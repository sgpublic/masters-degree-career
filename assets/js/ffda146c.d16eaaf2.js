"use strict";(self.webpackChunkpgee=self.webpackChunkpgee||[]).push([[5524],{451:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>L});const i=JSON.parse('{"id":"programming/01/programming-01-05","title":"1.5 \u94fe\u8868","description":"\u5229\u7528\u7ed3\u6784\u4f53\uff0c\u53ef\u5b9e\u73b0\u94fe\u8868\u3002","source":"@site/docs/programming/01/programming-01-05.md","sourceDirName":"programming/01","slug":"/programming/01/programming-01-05","permalink":"/masters-degree-career/programming/01/programming-01-05","draft":false,"unlisted":false,"editUrl":"https://github.com/sgpublic/masters-degree-career/tree/main/docs/programming/01/programming-01-05.md","tags":[],"version":"current","lastUpdatedAt":1741002591000,"frontMatter":{},"sidebar":"programming","previous":{"title":"1.4 \u7ed3\u6784\u4f53","permalink":"/masters-degree-career/programming/01/programming-01-04"},"next":{"title":"\u4e8c\u3001\u7a0b\u5e8f\u8bed\u8a00\u7684\u4e09\u79cd\u63a7\u5236\u7ed3\u6784","permalink":"/masters-degree-career/category/\u4e8c\u7a0b\u5e8f\u8bed\u8a00\u7684\u4e09\u79cd\u63a7\u5236\u7ed3\u6784"}}');var s=t(4848),d=t(8453);const r={},o="1.5 \u94fe\u8868",c={},L=[];function a(n){const e={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,d.R)(),...n.components},{Details:t}=e;return t||function(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"15-\u94fe\u8868",children:"1.5 \u94fe\u8868"})}),"\n",(0,s.jsx)(e.p,{children:"\u5229\u7528\u7ed3\u6784\u4f53\uff0c\u53ef\u5b9e\u73b0\u94fe\u8868\u3002"}),"\n",(0,s.jsx)(e.p,{children:"\u94fe\u8868\u7684\u7cbe\u9ad3\u5728\u4e8e\u6bcf\u4e2a\u8282\u70b9\u4f1a\u5b58\u653e\u4e0b\u4e00\u4e2a\u5143\u7d20\u7684\u6307\u9488\uff0c\u4f7f\u5176\u65e0\u9700\u5206\u914d\u8fde\u7eed\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u4e5f\u80fd\u5b9e\u73b0\u6570\u7ec4\u5f62\u5f0f\u7684\u6570\u636e\u7ed3\u6784\u3002"}),"\n",(0,s.jsx)(e.p,{children:"\u8282\u70b9\u4ee3\u7801\u793a\u4f8b\u5982\u4e0b\uff1a"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-c",children:"struct _LinkedListNode {\n    int value;\n    struct _LinkedListNode* next;\n};\n"})}),"\n",(0,s.jsxs)(e.p,{children:["\u6ce8\u610f\u521b\u5efa\u8282\u70b9\u65f6\u8981\u4f7f\u7528 ",(0,s.jsx)(e.code,{children:"malloc"}),"\uff08\u82e5\u4e0d\u4f7f\u7528\u76f4\u63a5\u58f0\u660e\u7684\u8bdd\uff0c\u5bf9\u8c61\u4f1a\u5728\u51fd\u6570\u6267\u884c\u5b8c\u6210\u540e\u81ea\u52a8\u91ca\u653e\uff09\uff1a"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-c",children:"struct LinkedListNode* newNode(int value) {\n    struct LinkedListNode *node = (struct LinkedListNode*)malloc(sizeof(struct LinkedListNode));\n    node->value = value;\n    node->next = NULL;\n    return node;\n}\n"})}),"\n",(0,s.jsxs)(t,{children:[(0,s.jsx)("summary",{children:"\u5b8c\u6574\u4ee3\u7801"}),(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-c",children:'#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n\nstruct LinkedListNode {\n    int value;\n    struct LinkedListNode* next;\n};\n\nstruct LinkedListNode* newNode(int value) {\n    struct LinkedListNode *node = (struct LinkedListNode*)malloc(sizeof(struct LinkedListNode));\n    node->value = value;\n    node->next = NULL;\n    return node;\n}\n\nvoid freeNodes(struct LinkedListNode* node) {\n    if (node->next != NULL) {\n        freeNodes(node->next);\n    } else {\n        free(node);\n    }\n}\n\nint main() {\n    struct LinkedListNode *head = newNode(0);\n    struct LinkedListNode *current = head;\n    struct LinkedListNode *next;\n\n    next = newNode(1);\n    current->next = next;\n    current = next;\n\n    next = newNode(2);\n    current->next = next;\n    current = next;\n\n    next = newNode(3);\n    current->next = next;\n\n    current = head;\n    while (true) {\n        printf("%d\\n", current->value);\n        if (current->next == NULL) {\n            break;\n        }\n        current = current->next;\n    }\n\n    freeNodes(head);\n\n    return 0;\n}\n'})}),(0,s.jsx)(e.p,{children:"\u8f93\u51fa\uff1a"}),(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"/Users/madray/Documents/JetBrains/CLion/CTest/cmake-build-debug/CTest\n0\n1\n2\n3\n\nProcess finished with exit code 0\n"})})]}),"\n",(0,s.jsxs)(t,{children:[(0,s.jsx)("summary",{children:"DLC"}),(0,s.jsx)(e.p,{children:"\u5229\u7528\u51fd\u6570\u6307\u9488\uff0c\u53ef\u5b9e\u73b0\u8f83\u4e3a\u5b8c\u6574\u7684 LinkedList\u3002"}),(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-c",children:'#include <stdlib.h>\n#include "stdio.h"\n\n#define _LinkedListNode_Size sizeof(struct _LinkedListNode)\nstruct _LinkedListNode {\n    int value;\n    struct _LinkedListNode* next;\n    void (*_free)(struct _LinkedListNode* this);\n};\n\nvoid _LinkedListNode_free(struct _LinkedListNode* this) {\n    if (this->next != NULL) {\n        this->next->_free(this->next);\n    }\n    free(this);\n}\n\nstruct _LinkedListNode* _new_LinkedListNode(int value) {\n    struct _LinkedListNode* node = (struct _LinkedListNode*)malloc(_LinkedListNode_Size);\n    node->value = value;\n    node->next = NULL;\n    node->_free = _LinkedListNode_free;\n    return node;\n}\n\nstruct LinkedList {\n    int _size;\n    struct _LinkedListNode *_head;\n    struct _LinkedListNode *_last;\n    int (*size)(struct LinkedList *this);\n    void (*add)(struct LinkedList *this, int value);\n    int (*get)(struct LinkedList *this, int index);\n    void (*_free)(struct LinkedList *this);\n};\n\nint LinkedList_size(struct LinkedList *this) {\n    return this->_size;\n}\n\nvoid LinkedList_add(struct LinkedList *this, int value) {\n    struct _LinkedListNode* node = _new_LinkedListNode(value);\n    if (this->_size == 0) {\n        this->_head = node;\n        this->_last = node;\n    } else {\n        struct _LinkedListNode *last = this->_last;\n        last->next = node;\n        this->_last = node;\n    }\n    this->_size += 1;\n}\n\nint LinkedList_get(struct LinkedList *this, int index) {\n    struct _LinkedListNode *current = this->_head;\n    for (int i = 0; i < index; ++i) {\n        current = current->next;\n    }\n    return current->value;\n}\n\nvoid _LinkedList_free(struct LinkedList *this) {\n    struct _LinkedListNode *head = this->_head;\n    if (head != NULL) {\n        head->_free(head);\n    }\n}\n\nstruct LinkedList new_LinkedList() {\n    struct LinkedList list = {\n            ._size = 0,\n            ._head = NULL,\n            ._last = NULL,\n            .size = LinkedList_size,\n            .add = LinkedList_add,\n            .get = LinkedList_get,\n            ._free = _LinkedList_free,\n    };\n    return list;\n}\n\nint main() {\n    struct LinkedList linkedList = new_LinkedList();\n\n    linkedList.add(&linkedList, 1);\n    linkedList.add(&linkedList, 1);\n    linkedList.add(&linkedList, 4);\n    linkedList.add(&linkedList, 5);\n    linkedList.add(&linkedList, 1);\n    linkedList.add(&linkedList, 4);\n\n    int size = linkedList.size(&linkedList);\n    printf("\u94fe\u8868\u7684\u957f\u5ea6\u4e3a\uff1a%d\\n", size);\n    for (int i = 0; i < size; ++i) {\n        printf("\u94fe\u8868\u7684\u7b2c %d \u4e2a\u5143\u7d20\u4e3a\uff1a%d\\n", i + 1, linkedList.get(&linkedList, i));\n    }\n\n    linkedList._free(&linkedList);\n\n    return 0;\n}\n'})}),(0,s.jsx)(e.p,{children:"\u8f93\u51fa\uff1a"}),(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"/Users/madray/Documents/JetBrains/CLion/CTest/cmake-build-debug/CTest\n\u94fe\u8868\u7684\u957f\u5ea6\u4e3a\uff1a6\n\u94fe\u8868\u7684\u7b2c 1 \u4e2a\u5143\u7d20\u4e3a\uff1a1\n\u94fe\u8868\u7684\u7b2c 2 \u4e2a\u5143\u7d20\u4e3a\uff1a1\n\u94fe\u8868\u7684\u7b2c 3 \u4e2a\u5143\u7d20\u4e3a\uff1a4\n\u94fe\u8868\u7684\u7b2c 4 \u4e2a\u5143\u7d20\u4e3a\uff1a5\n\u94fe\u8868\u7684\u7b2c 5 \u4e2a\u5143\u7d20\u4e3a\uff1a1\n\u94fe\u8868\u7684\u7b2c 6 \u4e2a\u5143\u7d20\u4e3a\uff1a4\n\nProcess finished with exit code 0\n"})})]})]})}function u(n={}){const{wrapper:e}={...(0,d.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(a,{...n})}):a(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>r,x:()=>o});var i=t(6540);const s={},d=i.createContext(s);function r(n){const e=i.useContext(d);return i.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:r(n.components),i.createElement(d.Provider,{value:e},n.children)}}}]);